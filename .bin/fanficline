#!/usr/bin/env ruby

require 'net/http'
require 'uri'
require 'nokogiri'
require 'typhoeus'

class Fic
  def initialize(url)
    @url = URI url
    @doc = Nokogiri::HTML Typhoeus.get(@url, followlocation: true).body
    # puts @doc.inspect
  end

  def fantag(dom)
    case dom
    when /star wars/i
      'SW'
    when /avengers/i, /thor/i
      'Thor'
    when /harry potter/i
      'HP'
    when /lord of the rings/i
      'LotR'
    when /stargate/i, /sg-?1/i
      'Stargate'
    when /naruto/i
      'Naruto'
    when /pok.mon/i
      'Pok√©mon'
    when /x-?men/i
      'X-Men'
    when /dresden/i
      'Dresden'
    end
  end

  def fandoms
    [fandom]
  end

  def tag
    tags = fandoms
      .map { |dom| fantag dom }
      .compact
      .uniq

    if tags.empty?
      '?'
    else
      tags.join '/'
    end
  end

  def gettext(el)
    return unless el
    return unless el.text
    el.text.strip
  end

  def to_s
    sprintf "- {%s} [%s](%s). {%ik words%s}",
      tag,
      title,
      first_chapter,
      (words / 1000).round,
      if complete?
        ''
      else
        ' atow'
      end
  end

  def self.from_url(url)
    url = url.strip
    if Ao3.is(url)
      return Ao3.new url
    end
  end
end

class Ao3 < Fic
  DOMAIN = "archiveofourown.org"

  def self.is(url)
    URI(url).host == DOMAIN
  end

  def title
    gettext(@doc.at_css('h2.title')) ||
      @doc.at_css('title').text.split('-').first.strip
  end

  def fandoms
    [
      @doc.css('.fandom .tag').to_a,
      @doc.css('.fandoms .tag').to_a
    ].flatten.map { |el| gettext el }.compact
  end

  def work_id
    %r{#{DOMAIN}/works/(\d+)}.match(@url.to_s)[1].strip
  end

  def first_chapter
    "https://#{DOMAIN}/works/#{work_id}"
  end

  def words
    (gettext(@doc.at_css('.stats dd.words')) || '').gsub(/,/, '').to_f
  end

  def chapters
    ch = gettext(@doc.at_css('.stats dd.chapters')) || '1/?'
    ch.split('/').map { |c| c.to_i }
  end

  def complete?
    chapters[0] == chapters[1]
  end
end

if ARGV.first == '-'
  out = File.open 'fanfics', 'a+'
  print "> "
  STDIN.each_line do |url|
    fic = Fic.from_url url
    if fic
      out.puts fic.to_s
      puts fic.to_s
      print "> "
    end
  end
  exit
end

ARGV.each do |url|
  fic = Fic.from_url url
  if fic
    puts fic.to_s
  end
end
